---
- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto

- block:
  - name: Check if folders exist
    stat:
      path: '{{ item }}'
    register: folder_state
    loop:
    - '{{ directory_config }}'
    - '{{ directory_log }}'
    - '{{ directory_cache_root }}'
    - '{{ directory_venv }}'


  - name: Ensure directories exist with correct permissions
    file:
      path: '{{ item.item }}'
      owner: '{{ application_user }}'
      group: '{{ application_group }}'
      state: 'directory'
      mode: '0755'
      force: no
    when: item.stat.exists == false
    loop: '{{ folder_state.results }}'
    become: yes
    tags: download-config

  - name: Remove old virtual environment
    file:
      path: '{{ directory_venv }}'
      state: 'absent'
    become: yes
    notify: Restart Download systemd Services
    when: delete_deployment
    tags:
      - download-config
      - virtualenv

  - name: Ensure python3 dependencies
    yum:
      name:
        - python3-pip
        - python-setuptools
        - python3-devel
      state: present
    become: yes

  - name: Install pip to virtualenv
    pip:
      name:
        - pip
      virtualenv: '{{ directory_venv }}'
      virtualenv_command: '{{ virtualenv_command }}'
    become: yes

  - name: Install Download requirements in virtualenv with pip
    pip:
      requirements: '{{ repo_dest }}/requirements.txt'
      virtualenv: '{{ directory_venv }}'
      virtualenv_command: '{{ virtualenv_command }}'
    become_user: '{{ application_user }}'
    notify: Restart Download systemd Services
    tags:
      - download-config
      - virtualenv

  - name: Install Download dev requirements in virtualenv with pip
    pip:
      requirements: '{{ repo_dest }}/requirements-dev.txt'
      virtualenv: '{{ directory_venv }}'
      virtualenv_command: '{{ virtualenv_command }}'
    when: application_environment != 'production'
    become_user: '{{ application_user }}'
    notify: Restart Download systemd Services
    tags:
      - download-config
      - virtualenv

  - name: Copy service settings
    template:
      src: 'fairdata-download-service-settings.cfg.j2'
      dest: '{{ application_service_settings }}'
      owner: '{{ application_user }}'
      group: '{{ application_group }}'
      mode: '0640'
      force: no
    become: yes
    tags: download-config

  when: not delete_deployment

- name: Remove instance directories
  file:
    path: '{{ item }}'
    state: 'absent'
  with_items:
  - '{{ directory_venv }}'
  - '{{ directory_config }}'
  - '{{ directory_log }}'
  become: yes
  tags: download-config
  when: delete_deployment
